# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

ENV["ASC_ISSUER_ID"] = "69a6de86-4669-47e3-e053-5b8c7c11a4d1"
ENV["ASC_KEY_ID"] = "HAQAM5Z3R2"
ENV["ASC_KEY"] = "MIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgL1dZTq0vZi27B9ylX7mmzmIFNekn2FcXq7kOSl2kzL2gCgYIKoZIzj0DAQehRANCAAQi/TL9JKOuQ8yoA9z8in2zyyNbayto0wpTz3PbhwFRnimVmYVOwrS3fB3g0LDQkZ0b4zKjfty0Pgorg8geQafk"
ENV["SIGNING_KEY_PASSWORD"] = ""
ENV["SIGNING_KEY_FILE_PATH"] = "signing-cert.p12"
ENV["IOS_DIST_SIGNING_KEY"] = "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
"

ENV["SIGNING_KEY_FILE_PATH"] = "signing-cert.p12"
ENV["SIGNING_KEY_PASSWORD"] = ""

desc "Load ASC API Key information to use in subsequent lanes"
lane :load_asc_api_key do
  app_store_connect_api_key(
    key_id: ENV["ASC_KEY_ID"],
    issuer_id: ENV["ASC_ISSUER_ID"],
    key_content: ENV["ASC_KEY"],
    is_key_content_base64: true,
    in_house: false # detecting this via ASC private key not currently supported
  )
end

desc "Bump build number based on most recent TestFlight build number"
lane :fetch_and_increment_build_number do
 #fetch read your app identifier defined in your Appfile
 app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

 current_version = get_version_number(
   target: "Carmen Grid" # replace with your main target, required if you have more than one non-test target
 )
 latest_build_number = latest_testflight_build_number(
   api_key: api_key,
   version: current_version,
   app_identifier: app_identifier
 )
 increment_build_number(
   build_number: (latest_build_number + 1),
 )
end


 desc "Installs signing certificate in the keychain and downloads provisioning profiles from App Store Connect"
 lane :prepare_signing do |options|
   team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
   api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

   keychain_name = "signing"
   keychain_password = "temp"

   delete_keychain(
     name: keychain_name
   ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

   create_keychain(
     name: keychain_name,
     password: keychain_password,
     default_keychain: true,
     unlock: true,
     timeout: 3600
   )

   import_certificate(
     certificate_path: ENV["SIGNING_KEY_FILE_PATH"],
     certificate_password: ENV["SIGNING_KEY_PASSWORD"],
     keychain_name: keychain_name,
     keychain_password: keychain_password
   )

   # fetches and installs provisioning profiles from ASC
   sigh(
     adhoc: options[:adhoc],
     api_key: api_key,
     readonly: true
   )
 end




desc "Build the iOS app for release"
lane :build_release do |options|
 app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

 profile_name = "App Provisioning Profile" # replace with the name of the profile to use for the build
 output_name = "CarmenGrid" # specify the name of the .ipa file to generate
 export_method = "app-store" # specify the export method

 # turn off automatic signing during build so correct code signing identity is guaranteed to be used
 update_code_signing_settings(
   use_automatic_signing: false,
   targets: ["CarmenGrid"], # specify which targets to update code signing settings for
   code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
   bundle_identifier: app_identifier,
   profile_name: profile_name,
   build_configurations: ["Release"] # only toggle code signing settings for Release configurations
 )

 # build the app
 gym(
   scheme: "CarmenGrid", # replace with name of your project’s scheme
   output_name: output_name,
   configuration: "Release",
   export_options: {
     method: export_method,
     provisioningProfiles: {
       app_identifier => profile_name # here you can add any additional bundle identifiers and their associated provisioning profiles if you’re also building an app extension or other bundle identifier
     }
   }
 )
end

desc "Upload to TestFlight / ASC"
lane :upload_release do
 api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

 deliver(
     api_key: api_key,
     skip_screenshots: true,
     skip_metadata: true,
     skip_app_version_update: true,
     force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
     run_precheck_before_submit: false # not supported through ASC API yet
 )
end
 desc "Build and upload to TestFlight"
   lane :build_upload_testflight do
     sh('echo $IOS_DIST_SIGNING_KEY | base64 --decode > ../signing-cert.p12')
     load_asc_api_key
     prepare_signing
     fetch_and_increment_build_number
     build_release
     # upload_release
   end